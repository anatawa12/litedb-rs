// MIR for `get_mut_or_self_test_4` before ElaborateDrops

fn get_mut_or_self_test_4(_1: &mut HashMap<u32, ()>, _2: u32) -> Result<&mut (), &mut HashMap<u32, ()>> {
    debug this => _1;
    debug key => _2;
    let mut _0: std::result::Result<&mut (), &mut std::collections::HashMap<u32, ()>>;
    let mut _3: bool;
    let mut _4: &std::collections::HashMap<u32, ()>;
    let mut _5: &u32;
    let _6: &u32;
    let mut _7: &mut ();
    let mut _8: &mut ();
    let mut _9: std::option::Option<&mut ()>;
    let mut _10: &mut std::collections::HashMap<u32, ()>;
    let mut _11: &u32;
    let _12: &u32;
    let mut _13: &mut std::collections::HashMap<u32, ()>;

    bb0: {
        StorageLive(_3);
        StorageLive(_4);
        _4 = &(*_1);
        StorageLive(_5);
        StorageLive(_6);
        _6 = &_2;
        _5 = &(*_6);
        _3 = HashMap::<u32, ()>::contains_key::<u32>(move _4, move _5) -> [return: bb1, unwind continue];
    }

    bb1: {
        switchInt(move _3) -> [0: bb5, otherwise: bb2];
    }

    bb2: {
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_7);
        StorageLive(_8);
        StorageLive(_9);
        StorageLive(_10);
        _10 = &mut (*_1);
        StorageLive(_11);
        StorageLive(_12);
        _12 = &_2;
        _11 = &(*_12);
        _9 = HashMap::<u32, ()>::get_mut::<u32>(move _10, move _11) -> [return: bb3, unwind continue];
    }

    bb3: {
        StorageDead(_11);
        StorageDead(_10);
        _8 = Option::<&mut ()>::unwrap(move _9) -> [return: bb4, unwind continue];
    }

    bb4: {
        _7 = &mut (*_8);
        StorageDead(_9);
        _0 = Result::<&mut (), &mut HashMap<u32, ()>>::Ok(move _7);
        StorageDead(_7);
        StorageDead(_12);
        StorageDead(_8);
        goto -> bb6;
    }

    bb5: {
        StorageDead(_6);
        StorageDead(_5);
        StorageDead(_4);
        StorageLive(_13);
        _13 = &mut (*_1);
        _0 = Result::<&mut (), &mut HashMap<u32, ()>>::Err(move _13);
        StorageDead(_13);
        goto -> bb6;
    }

    bb6: {
        StorageDead(_3);
        return;
    }
}
